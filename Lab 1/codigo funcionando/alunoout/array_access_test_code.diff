143a144
> a              main      array    int         2 11 
144a146
> c              main      array    int         2  7 11 
147d148
< a              main      array    int         2 11 
149d149
< c              main      array    int         2  7 11 
154a155,156
> 
> Checking for main...
162c164
<   3:    LDA  7,0(7) 	
---
>   3:    LDA  7,0(7) 	jump to main
181d182
< * TESTANDO NOME ESCOPO: global
185c186,240
< * <- while
---
> * repeat: jump after body comes back here
> * -> Op
> * -> Id
>  12:     LD  0,-35(2) 	load id value
> * <- Id
>  13:     ST  0,-36(2) 	op: push left
> * -> Const
>  14:    LDC  0,10(0) 	load const
> * <- Const
>  15:     LD  1,-36(2) 	op: load left
>  16:    SUB  0,1,0 	op <
>  17:    JLT  0,2(7) 	br if true
>  18:    LDC  0,0(0) 	false case
>  19:    LDA  7,1(7) 	unconditional jmp
>  20:    LDC  0,1(0) 	true case
> * <- Op
> * -> assign vector
> * -> Vector
> * -> Const
>  22:    LDC  0,1(0) 	load const
> * <- Const
>  23:     LD  1,-13(2) 	get the address of the vector
>  24:     LD  3,-35(2) 	get the value of the index
>  25:    LDC  4,1(0) 	load 1
>  26:    ADD  3,3,4 	sub 3 by 1
>  27:    SUB  1,1,3 	get the address
>  28:     ST  0,0(1) 	get the value of the vector
> * -> assign vector
> * -> Vector
> * -> Const
>  29:    LDC  0,1(0) 	load const
> * <- Const
>  30:     LD  1,-24(2) 	get the address of the vector
>  31:     LD  3,-35(2) 	get the value of the index
>  32:    LDC  4,1(0) 	load 1
>  33:    ADD  3,3,4 	sub 3 by 1
>  34:    SUB  1,1,3 	get the address
>  35:     ST  0,0(1) 	get the value of the vector
> * -> assign
> * -> Op
> * -> Id
>  36:     LD  0,-35(2) 	load id value
> * <- Id
>  37:     ST  0,-36(2) 	op: push left
> * -> Const
>  38:    LDC  0,1(0) 	load const
> * <- Const
>  39:     LD  1,-36(2) 	op: load left
>  40:    ADD  0,1,0 	op +
> * <- Op
>  41:     ST  0,-35(2) 	assign: store value
> * <- assign
>  42:    LDA  7,-31(7) 	jump to savedLoc1
>  21:    JEQ  0,21(7) 	repeat: jmp to end
> * <- repeat
187c242,291
< * <- while
---
> * repeat: jump after body comes back here
> * -> Op
> * -> Id
>  43:     LD  0,-35(2) 	load id value
> * <- Id
>  44:     ST  0,-36(2) 	op: push left
> * -> Const
>  45:    LDC  0,10(0) 	load const
> * <- Const
>  46:     LD  1,-36(2) 	op: load left
>  47:    SUB  0,1,0 	op <
>  48:    JLT  0,2(7) 	br if true
>  49:    LDC  0,0(0) 	false case
>  50:    LDA  7,1(7) 	unconditional jmp
>  51:    LDC  0,1(0) 	true case
> * <- Op
> * -> assign vector
> * -> Vector
> * -> Op
> * -> Id
> * -> Vector
>  53:     LD  0,-13(2) 	get the address of the vector
>  54:     LD  3,-35(2) 	get the value of the index
>  55:    LDC  4,1(0) 	load 1
>  56:    ADD  3,3,4 	sub 3 by 1
>  57:    SUB  0,0,3 	get the address
>  58:     LD  0,0(0) 	get the value of the vector
> * <- Id
>  59:     ST  0,-36(2) 	op: push left
> * -> Id
> * -> Vector
>  60:     LD  0,-24(2) 	get the address of the vector
>  61:     LD  3,-35(2) 	get the value of the index
>  62:    LDC  4,1(0) 	load 1
>  63:    ADD  3,3,4 	sub 3 by 1
>  64:    SUB  0,0,3 	get the address
>  65:     LD  0,0(0) 	get the value of the vector
> * <- Id
>  66:     LD  1,-36(2) 	op: load left
>  67:    ADD  0,1,0 	op +
> * <- Op
>  68:     LD  1,-2(2) 	get the address of the vector
>  69:     LD  3,-35(2) 	get the value of the index
>  70:    LDC  4,1(0) 	load 1
>  71:    ADD  3,3,4 	sub 3 by 1
>  72:    SUB  1,1,3 	get the address
>  73:     ST  0,0(1) 	get the value of the vector
>  74:    LDA  7,-32(7) 	jump to savedLoc1
>  52:    JEQ  0,22(7) 	repeat: jmp to end
> * <- repeat
190c294
<  12:   HALT  0,0,0 	
---
>  75:   HALT  0,0,0 	
