1c1,2
< 	1: /* ordenacao por selecao */
---
> 1: /* ordenacao por selecao */
> 2: int x[10];
7a9,10
> 3: 
> 4: int minloc ( int a[], int low, int high ){
22a26
> 5:     int i; int x; int k;
31a36
> 6:     k = low;
35a41
> 7:     x = a[low];
42a49
> 8:     i = low + 1;
48a56
> 9:     while(i<high){
55a64
> 10:         if(a[i] < x){
65a75
> 11:             x = a[i];
72a83
> 12:             k = i;
76a88
> 13:         }
77a90
> 14:         i = i + 1;
83a97
> 15:     }
84a99
> 16:     return k;
87a103
> 17: }
88a105,106
> 18: 
> 19: void sort(int a[], int low, int high){
103a122
> 20:     int i; int k;
109a129
> 21:     i = low;
113a134
> 22:     while(i < high â€“ 1){
124a146
> 23:         int t;
127a150
> 24:         k = minloc(a,i,high);
138a162
> 25:         t = a[k];
145a170
> 26:         a[k] = a[i];
155a181
> 27:         a[i] = t;
162a189
> 28:         i = i + 1;
168a196
> 29:     }
169a198
> 30: }
170a200,201
> 31: 
> 32: void main(void){
176a208
> 33:     int i;
179a212
> 34:     i = 0;
183a217
> 35:     while(i<10){
190a225
> 36:         x[i] = input();
199a235
> 37:         i = i + 1;
205a242
> 38:     }
206a244
> 39:     sort(x,0,10);
215a254
> 40:     i = 0;
219a259
> 41:     while(i<10){
226a267
> 42:         output(x[i]);
234a276
> 43:         i = i + 1;
240a283
> 44:     }
241a285
> 45: }
