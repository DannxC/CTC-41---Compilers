1c1,2
< 	1: /* ordenacao por selecao */
---
> 1: /* ordenacao por selecao */
> 2: int x[10];
7a9,10
> 3: 
> 4: int minloc ( int a[], int low, int high ){
22a26
> 5:     int i; int x; int k;
31a36
> 6:     k = low;
35a41
> 7:     x = a[low];
42a49
> 8:     i = low + 1;
48a56
> 9:     while(i<high){
55a64
> 10:         if(a[i] < x){
65a75
> 11:             x = a[i];
72a83
> 12:             k = i;
76a88
> 13:         }
77a90
> 14:         i = i + 1;
83a97
> 15:     }
84a99
> 16:     return k;
87a103
> 17: }
88a105,106
> 18: 
> 19: void sort(int a[], int low, int high){
103a122
> 20:     int i; int k;
109a129
> 21:     i = low;
113a134
> 22:     while(i < high - 1 ) {
122a144
> 23:         int t;
125a148
> 24:         k = minloc(a,i,high);
136a160
> 25:         t = a[k];
143a168
> 26:         a[k] = a[i];
153a179
> 27:         a[i] = t;
160a187
> 28:         i = i + 1;
166a194
> 29:     }
167a196
> 30: }
168a198,199
> 31: 
> 32: void main(void){
174a206
> 33:     int i;
177a210
> 34:     i = 0;
181a215
> 35:     while(i<10){
188a223
> 36:         x[i] = input();
197a233
> 37:         i = i + 1;
203a240
> 38:     }
204a242
> 39:     sort(x,0,10);
213a252
> 40:     i = 0;
217a257
> 41:     while(i<10){
224a265
> 42:         output(x[i]);
232a274
> 43:         i = i + 1;
238a281
> 44:     }
239a283
> 45: }
